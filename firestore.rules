rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Função helper para verificar autenticação
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Função para verificar se o usuário é owner do recurso
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Projects - Usuário pode CRUD apenas seus próprios projetos
    match /projects/{projectId} {
      allow read, write: if isAuthenticated() && 
        (resource == null || resource.data.createdBy == request.auth.uid);
      allow create: if isAuthenticated() && 
        request.resource.data.createdBy == request.auth.uid &&
        request.resource.data.status in ['active', 'completed', 'paused'];
    }
    
    // Tasks - Usuário pode ver/editar tarefas de seus projetos
    match /tasks/{taskId} {
      allow read, write: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.status in ['pending', 'in_progress', 'completed', 'cancelled'];
    }
    
    // Project Members - Relacionamento entre usuários e projetos
    match /project_members/{memberId} {
      allow read, write: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.active is bool;
    }
    
    // Members - Perfis de usuários da equipe
    match /members/{memberId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.active is bool;
    }
    
    // Users - Perfis pessoais dos usuários
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Activities - Log de atividades (apenas leitura para usuários)
    match /activities/{activityId} {
      allow read: if isAuthenticated();
      allow write: if false; // Atividades são criadas apenas por triggers/functions
    }
  }
}